
#Constraints &  Indexes
#Constrain example Im a manager at Reddit and a user is being mean so I have to delete them 
#Tried inserting film where languag_id didnt exist

INSERT INTO `sakila`.`film`
(`film_id`,
`title`,
`description`,
`release_year`,
`language_id`,
`original_language_id`,
`rental_duration`,
`rental_rate`,
`length`,
`replacement_cost`,
`rating`,
`special_features`,
`last_update`)
VALUES
(7000,
'Indiana Jones',
'Indiana is back',
2023,
7,
1,
3,
4.99,
130,
19.99,
'PG-13',
null,
NOW());
#Cannot add or update a child row: a foreign key constraint fails 
#(`sakila`.`film`, CONSTRAINT `fk_film_language` FOREIGN KEY (`language_id`) REFERENCES `language` 
#(`language_id`) ON DELETE RESTRICT ON UPDATE CASCADE)
#BC the language id doesnt exist 

#Insert it now 
INSERT INTO `sakila`.`language`
(`language_id`,
`name`,
`last_update`)
VALUES
(7,
'Portuguese',
Now());


#Now it's in the film table 
select * 
from film
where title = 'Indiana Jones';

#Step 4 Try to delete Portuguese from Languse table 
delete from
language 
where name = 'Portuguese';

#You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column.  
#To disable safe mode, toggle the option in Preferences -> SQL Editor and reconnect.
#Error Code: 1451. Cannot delete or update a parent row: a foreign key constraint fails 
#(`sakila`.`film`, CONSTRAINT `fk_film_language` FOREIGN KEY (`language_id`) REFERENCES `language` (`language_id`) ON DELETE RESTRICT ON UPDATE CASCADE)

#Cant delete parent row, 

#Step 5 Hit the wrench on film table > foreign keys ( select the top) > switch "on delete' to CASADE

#It also deleted the movie Indiana (bc the language Portuguese was involved) 
select * from film where title = 'Indiana Jones';

#Step 6 Reinsert everything 



--  STEPS 
-- step 4, try to delete portugese from the language table
DELETE from language WHERE name = 'Portugese';
-- Error Code: 1451. Cannot delete or update a parent row: a foreign key constraint fails (`sakila`.`film`, CONSTRAINT `fk_film_language` FOREIGN KEY (`language_id`) REFERENCES `language` (`language_id`) ON DELETE RESTRICT ON UPDATE CASCADE)
-- step 5 change language foreign key to ON DELETE CASCADE, then try step 4 again
-- step 6 reinsert language and movie
-- step 7 change foreign key rule to ON DELETE SET NULL, then try step 4 again

#Indexes speeds up the record retrieval 

select * 
from actor
where actor_id between 10 and 200;

#Exercise (s) Friday 
# 'Guide' from textbook 
#ALTER TABLE customer
#ADD CONSTRAINT fk_customer_address FOREIGN KEY (address_id)
#REFERENCES address (address_id) ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE customer
ADD CONSTRAINT fk_customer_store FOREIGN KEY (store_id)
REFERENCES store (store_id) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE rental
ADD CONSTRAINT fk_rental_customer
FOREIGN KEY (customer_id)
REFERENCES customer (customer_id)
ON DELETE RESTRICT ;


-- Generate a multicolumn index on the payment table that could be used by both of the following queries:


#mysql> ALTER TABLE customer
#ADD INDEX idx_full_name (last_name, first_name);
CREATE INDEX idx_payment_date_amount ON payment (payment_date, amount);

SELECT customer_id
    , payment_date
    , amount
    FROM   payment
     WHERE  payment_date > CAST('2006-02-14 03:59:59' AS DATETIME);
     
-- create unique index

create or replace view actor_with_films as 
	select first_name, last_name, title, description
    from film f
		join film_actor fa 
			on f.film_id =  fa.film_id
		join actor a
			on a.actor_id = fa.actor_id;







